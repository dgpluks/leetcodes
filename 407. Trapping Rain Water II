int cont = 0;
int ver = 0;
int qn = 0;
int alt;
int volume (int *max1, int *max2, int fui[*max1][*max2], int i, int j, int **vet){
    cont += alt - vet[i][j];
    if(ver == 1 || (i == 1 && vet[i-1][j] <= vet[i][j] && vet[i-1][j] <= alt) || (j == 1 && vet[i][j-1] <= vet[i][j] && vet[i][j-1] <= alt) || (i == (*max1)-2 && vet[i+1][j] <= vet[i][j] && vet[i+1][j] <= alt) || (j == (*max2)-2 && vet[i][j+1] <= vet[i][j] && vet[i][j+1] <= alt)){
        printf("-%d -",i == 1 && vet[i-1][j] <= vet[i][j]);
        printf("-%d -",j == 1 && vet[i][j-1] <= vet[i][j]);
        ver = 1;
        return 0;
    }
    qn++;
    fui[i][j] = -1;
    for(int i = 0; i<*max1;i++ ){
        for(int j = 0; j <*max2; j++ ){
            printf("%d ", fui[i][j]*-1);
        }
        printf("\n");
    }
    printf("\n");
    if(fui[i][j+1] != -1 && vet[i][j+1] < alt){
        volume(max1, max2, fui, i, j+1,vet);
        printf("direita\n");
    }
    if(fui[i+1][j] != -1 && vet[i+1][j] < alt){
        volume(max1, max2, fui, i+1, j, vet);
        printf("baixo\n");
    }
    if(fui[i][j-1] != -1 && vet[i][j-1] < alt){
        volume(max1, max2, fui, i, j-1 ,vet);
        printf("esquerda\n");
    }
    if(fui[i-1][j] != -1 && vet[i-1][j] < alt){
        volume(max1, max2, fui, i-1, j, vet);
        printf("coma\n");
    }
    if(ver == 1){
        printf("afaff");
        return 0;
    }
    return 1;
}
int trapRainWater(int** heightMap, int heightMapSize, int* heightMapColSize) {
    int vol = 0;
    int fui[heightMapSize][*heightMapColSize];
    for(int i = 0; i<heightMapSize;i++ ){
        for(int j = 0; j <*heightMapColSize; j++ ){
            fui[i][j]= 0;
        }
    }
    for(int i = 1; i<heightMapSize;i++ ){
        for(int j = 1; j <(*heightMapColSize); j++ ){
            if(fui[i][j] == 0 && heightMap[i][j] < heightMap[i-1][j] && heightMap[i][j] < heightMap[i][j-1]){
                alt = heightMap[i-1][j] > heightMap[i][j-1] ? heightMap[i-1][j] : heightMap[i][j-1];
                if(1 == volume(&heightMapSize, &(*heightMapColSize), fui, i, j, heightMap)){
                    vol+=cont;
                }
                qn = 0;
                cont = 0;
            }
        }
    }
    return vol;
}
